<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.fabric8.environment.builder</groupId>
  <artifactId>environments-builder-project</artifactId>
  <version>2.3-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Fabric8 :: Environment builder</name>

  <properties>
    <!-- <fabric8.version>2.2.19</fabric8.version> -->
    <fabric8.version>2.3-SNAPSHOT</fabric8.version>

    <recreate>false</recreate>
    <domain>${env.KUBERNETES_DOMAIN}</domain>

    <!-- lets combine dependent kubernetes json files -->
    <fabric8.combineDependencies>true</fabric8.combineDependencies>
    <fabric8.generateJson>false</fabric8.generateJson>

    <!-- allow build not to barf in the root directory -->
    <fabric8.failOnMissingJsonFiles>false</fabric8.failOnMissingJsonFiles>

    <!-- lets set some smart defaults -->
    <fabric8.recreate>${recreate}</fabric8.recreate>
    <fabric8.domain>${domain}</fabric8.domain>

    <fabric8.namespace>${project.artifactId}</fabric8.namespace>

    <fabric8.apply.DOMAIN>${domain}</fabric8.apply.DOMAIN>
    <fabric8.apply.GOGS_SERVER_DOMAIN>gogs.${domain}</fabric8.apply.GOGS_SERVER_DOMAIN>
    <fabric8.apply.GOGS_SERVER_DOMAIN>gogs.${domain}</fabric8.apply.GOGS_SERVER_DOMAIN>

  </properties>

  <modules>
    <module>team-fabric8</module>
    <module>team-hawtio</module>
  </modules>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <version>${fabric8.version}</version>
        <executions>
          <execution>
            <id>json</id>
            <phase>compile</phase>
            <goals>
              <goal>json</goal>
            </goals>
          </execution>
          <execution>
            <id>apply</id>
            <phase>package</phase>
            <goals>
              <goal>apply</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>enforce-property</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireProperty>
                  <property>domain</property>
                  <message>
-----------------------------------------------------------------------------------------------------


Missing Property: domain
========================

To install on kubernetes you must set a property called `domain` for the domain you wish to deploy to.
    e.g. `vagrant.local`.

The domain is then used as a suffix on host names and haproxy routes.
    e.g. the console would appear at `fabric8.vagrant.local`.

You can do this either by passing the domain on the command line:
    mvn compile -Ddomain=vagrant.local

Or via the $KUBERNETES_DOMAIN environment variable:
    export KUBERNETES_DOMAIN=vagrant.local


-----------------------------------------------------------------------------------------------------

                  </message>
                </requireProperty>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>fabric8-snapshot</id>
      <properties>
        <fabric8.version>2.3-SNAPSHOT</fabric8.version>
      </properties>
    </profile>
  </profiles>

</project>
